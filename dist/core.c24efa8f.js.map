{"version":3,"sources":["src/fp.js","src/math.js","src/collection.js","src/string.js","src/calculation.js","src/core.js"],"names":["compose","fns","value","reduceRight","acc","fn","mod","divisor","dividend","mod60","isZero","number","first","list","second","split","separator","text","splitByColon","toString","getHour","getMinute","singleDigitNumbers","isSingleDigit","numberText","includes","addPrefixDigit","nextMinuteNumber","nextHourNumber","nextMinute","Number","nextHour","passedOneMinute","minute","calculateNewTime","startTime","hour","newMinute","newHour","countdown","startButton","document","getElementById","stopButton","resetButton","initialTime","finishedTime","time","isFinished","finishTimer","stopPomodoro","updateTime","textContent","startPomodoro","setInterval","clearInterval","undefined","resetPomodoro","addEventListener"],"mappings":"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","file":"core.c24efa8f.js","sourceRoot":"..","sourcesContent":["const compose = (...fns) => (value) => fns.reduceRight((acc, fn) => fn(acc), value);\n\nexport { compose };\n","const mod = (divisor) => (dividend) => (((dividend) % divisor) + divisor) % divisor;\nconst mod60 = mod(60);\n\nconst isZero = (number) => number == 0;\n\nexport { mod60, isZero };\n","const first = (list) => list[0];\nconst second = (list) => list[1];\n\nexport { first, second };\n","const split = (separator) => (text) => text.split(separator);\nconst splitByColon = split(':');\n\nconst toString = (number) => number.toString();\n\nexport { splitByColon, toString };\n","import { compose } from \"./fp.js\";\nimport { mod60, isZero } from \"./math.js\";\nimport { first, second } from \"./collection.js\";\nimport { splitByColon, toString } from \"./string.js\";\n\nconst getHour = compose(first, splitByColon);\nconst getMinute = compose(second, splitByColon);\n\nconst singleDigitNumbers = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nconst isSingleDigit = numberText => singleDigitNumbers.includes(numberText);\nconst addPrefixDigit = numberText =>\n  isSingleDigit(numberText) ? `0${numberText}` : numberText;\n\nconst nextMinuteNumber = number => mod60(number - 1);\nconst nextHourNumber = number => (isZero(number) ? number : number - 1);\n\nconst nextMinute = compose(addPrefixDigit, toString, nextMinuteNumber, Number);\nconst nextHour = compose(addPrefixDigit, toString, nextHourNumber, Number);\n\nconst passedOneMinute = minute => minute == \"59\";\n\nconst calculateNewTime = startTime => {\n  const hour = getHour(startTime);\n  const minute = getMinute(startTime);\n\n  const newMinute = nextMinute(minute);\n  const newHour = passedOneMinute(newMinute) ? nextHour(hour) : hour;\n\n  return `${newHour}:${newMinute}`;\n};\n// most of these are for testing purposes\n// export {\n//   getHour,\n//   getMinute,\n//   isSingleDigit,\n//   addPrefixDigit,\n//   nextHourNumber,\n//   nextMinuteNumber,\n//   nextHour,\n//   nextMinute,\n//   calculateNewTime\n// };\nexport { calculateNewTime };\n","import { calculateNewTime } from './calculation.js'\n\nlet countdown;\n\nconst startButton = document.getElementById('start-button');\nconst stopButton = document.getElementById('stop-button');\nconst resetButton = document.getElementById('reset-button');\n\nconst initialTime = '25:00';\nconst finishedTime = '00:00';\nconst time = document.getElementById('time');\n\nconst isFinished = (startTime) => startTime === finishedTime;\nconst finishTimer = () => {\n  stopPomodoro();\n  return finishedTime;\n};\n\nconst updateTime = () => {\n  const startTime = time.textContent;\n  time.textContent = isFinished(startTime) ? finishTimer() : calculateNewTime(startTime);\n};\n\nconst startPomodoro = () => {\n  countdown = countdown || setInterval(updateTime, 1000);\n};\n\nconst stopPomodoro = () => {\n  clearInterval(countdown);\n  countdown = undefined;\n};\n\nconst resetPomodoro = () => {\n  stopPomodoro();\n  time.textContent = initialTime;\n};\n\nstartButton.addEventListener('click', startPomodoro);\nstopButton.addEventListener('click', stopPomodoro)\nresetButton.addEventListener('click', resetPomodoro);\n"]}